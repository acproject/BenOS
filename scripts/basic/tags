!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DFL	docproc.c	/^typedef void DFL(char *);$/;"	t	language:C	file:
DOCBOOK	docproc.c	63;"	d	language:C	file:
FILELINE	docproc.c	/^typedef void FILELINE(char * file, char * line);$/;"	t	language:C	file:
FILEONLY	docproc.c	/^typedef void FILEONLY(char * file);$/;"	t	language:C	file:
FUNCTION	docproc.c	64;"	d	language:C	file:
KERNELDOC	docproc.c	62;"	d	language:C	file:
KERNELDOCPATH	docproc.c	61;"	d	language:C	file:
MAXFILES	docproc.c	60;"	d	language:C	file:
MAXLINESZ	docproc.c	59;"	d	language:C	file:
NOFUNCTION	docproc.c	65;"	d	language:C	file:
add_new_file	docproc.c	/^struct symfile * add_new_file(char * filename)$/;"	f	language:C	signature:(char * filename)
add_new_symbol	docproc.c	/^void add_new_symbol(struct symfile *sym, char * symname)$/;"	f	language:C	signature:(struct symfile *sym, char * symname)
adddep	docproc.c	/^void adddep(char * file)		   { printf("\\t%s", file); }$/;"	f	language:C	signature:(char * file)
adddep2	docproc.c	/^void adddep2(char * file, char * line)     { line = line; adddep(file); }$/;"	f	language:C	signature:(char * file, char * line)
always	Makefile	/^always		:= $(hostprogs-y)$/;"	m	language:Make
clear_config	fixdep.c	/^void clear_config(void)$/;"	f	language:C	signature:(void)
cmdline	fixdep.c	/^char *cmdline;$/;"	v	language:C
defaultline	docproc.c	/^DFL *defaultline;$/;"	v	language:C
define_config	fixdep.c	/^void define_config(const char * name, int len)$/;"	f	language:C	signature:(const char * name, int len)
depfile	fixdep.c	/^char *depfile;$/;"	v	language:C
do_config_file	fixdep.c	/^void do_config_file(char *filename)$/;"	f	language:C	signature:(char *filename)
docfunctions	docproc.c	/^void docfunctions(char * filename, char * type)$/;"	f	language:C	signature:(char * filename, char * type)
entity_system	docproc.c	/^FILELINE * entity_system;$/;"	v	language:C
exec_kernel_doc	docproc.c	/^void exec_kernel_doc(char **svec)$/;"	f	language:C	signature:(char **svec)
exitstatus	docproc.c	/^int exitstatus = 0;$/;"	v	language:C
externalfunctions	docproc.c	/^FILEONLY *externalfunctions;$/;"	v	language:C
extfunc	docproc.c	/^void extfunc(char * filename) { docfunctions(filename, FUNCTION);   }$/;"	f	language:C	signature:(char * filename)
filename	docproc.c	/^	char *filename;$/;"	m	language:C	struct:symfile	file:
filename_exist	docproc.c	/^struct symfile * filename_exist(char * filename)$/;"	f	language:C	signature:(char * filename)
find_export_symbols	docproc.c	/^void find_export_symbols(char * filename)$/;"	f	language:C	signature:(char * filename)
grow_config	fixdep.c	/^void grow_config(int len)$/;"	f	language:C	signature:(int len)
hostprogs-y	Makefile	/^hostprogs-y	:= fixdep docproc$/;"	m	language:Make
internalfunctions	docproc.c	/^FILEONLY *internalfunctions;$/;"	v	language:C
intfunc	docproc.c	/^void intfunc(char * filename) {	docfunctions(filename, NOFUNCTION); }$/;"	f	language:C	signature:(char * filename)
is_defined_config	fixdep.c	/^int is_defined_config(const char * name, int len)$/;"	f	language:C	signature:(const char * name, int len)
len_config	fixdep.c	/^int    len_config  = 0;$/;"	v	language:C
main	docproc.c	/^int main(int argc, char **argv)$/;"	f	language:C	signature:(int argc, char **argv)
main	fixdep.c	/^int main(int argc, char **argv)$/;"	f	language:C	signature:(int argc, char **argv)
name	docproc.c	/^	char *name;$/;"	m	language:C	struct:symbols	file:
noaction	docproc.c	/^void noaction(char * line)		   { line = line; }$/;"	f	language:C	signature:(char * line)
noaction2	docproc.c	/^void noaction2(char * file, char * line)   { file = file; line = line; }$/;"	f	language:C	signature:(char * file, char * line)
parse_config_file	fixdep.c	/^void parse_config_file(char *map, size_t len)$/;"	f	language:C	signature:(char *map, size_t len)
parse_dep_file	fixdep.c	/^void parse_dep_file(void *map, size_t len)$/;"	f	language:C	signature:(void *map, size_t len)
parse_file	docproc.c	/^void parse_file(FILE *infile)$/;"	f	language:C	signature:(FILE *infile)
print_cmdline	fixdep.c	/^void print_cmdline(void)$/;"	f	language:C	signature:(void)
print_deps	fixdep.c	/^void print_deps(void)$/;"	f	language:C	signature:(void)
printline	docproc.c	/^void printline(char * line)               { printf("%s", line); }$/;"	f	language:C	signature:(char * line)
singfunc	docproc.c	/^void singfunc(char * filename, char * line)$/;"	f	language:C	signature:(char * filename, char * line)
singlefunctions	docproc.c	/^FILELINE * singlefunctions;$/;"	v	language:C
size_config	fixdep.c	/^int    size_config = 0;$/;"	v	language:C
str_config	fixdep.c	/^char * str_config  = NULL;$/;"	v	language:C
strrcmp	fixdep.c	/^int strrcmp(char *s, char *sub)$/;"	f	language:C	signature:(char *s, char *sub)
symbolcnt	docproc.c	/^	int symbolcnt;$/;"	m	language:C	struct:symfile	file:
symbollist	docproc.c	/^	struct symbols *symbollist;$/;"	m	language:C	struct:symfile	typeref:struct:symfile::symbols	file:
symbols	docproc.c	/^struct symbols$/;"	s	language:C	file:
symbolsonly	docproc.c	/^FILEONLY *symbolsonly;$/;"	v	language:C
symfile	docproc.c	/^struct symfile$/;"	s	language:C	file:
symfilecnt	docproc.c	/^int symfilecnt = 0;$/;"	v	language:C
symfilelist	docproc.c	/^struct symfile symfilelist[MAXFILES];$/;"	v	language:C	typeref:struct:symfile
target	fixdep.c	/^char *target;$/;"	v	language:C
traps	fixdep.c	/^void traps(void)$/;"	f	language:C	signature:(void)
usage	docproc.c	/^void usage (void)$/;"	f	language:C	signature:(void)
usage	fixdep.c	/^void usage(void)$/;"	f	language:C	signature:(void)
use_config	fixdep.c	/^void use_config(char *m, int slen)$/;"	f	language:C	signature:(char *m, int slen)
